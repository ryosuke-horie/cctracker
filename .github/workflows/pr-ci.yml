name: PR CI

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        id: typecheck
        continue-on-error: true
        run: |
          echo "## Type Check" >> $GITHUB_STEP_SUMMARY
          if npm run typecheck; then
            echo "✅ Type check passed" >> $GITHUB_STEP_SUMMARY
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "❌ Type check failed" >> $GITHUB_STEP_SUMMARY
            echo "status=failure" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Run format check
        id: format
        continue-on-error: true
        run: |
          echo "## Format Check" >> $GITHUB_STEP_SUMMARY
          if npm run format:check; then
            echo "✅ Format check passed" >> $GITHUB_STEP_SUMMARY
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "❌ Format check failed" >> $GITHUB_STEP_SUMMARY
            echo "status=failure" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Run tests
        id: test
        continue-on-error: true
        run: |
          echo "## Tests" >> $GITHUB_STEP_SUMMARY
          npm run test:run > test-output.txt 2>&1 || TEST_EXIT_CODE=$?
          
          # Display test results summary
          if grep -E "(Test Files|Tests)" test-output.txt; then
            grep -E "(Test Files|Tests)" test-output.txt >> $GITHUB_STEP_SUMMARY
          fi
          
          # Display failed test details if any
          if [ "${TEST_EXIT_CODE:-0}" -ne 0 ]; then
            echo "❌ Tests failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Failed Test Details" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat test-output.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "status=failure" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "✅ All tests passed" >> $GITHUB_STEP_SUMMARY
            echo "status=success" >> $GITHUB_OUTPUT
          fi

      - name: Report status
        if: always()
        run: |
          echo "## CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.typecheck.outputs.status }}" = "success" ]; then
            echo "| Type Check | ✅ |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Type Check | ❌ |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.format.outputs.status }}" = "success" ]; then
            echo "| Format | ✅ |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Format | ❌ |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.test.outputs.status }}" = "success" ]; then
            echo "| Tests | ✅ |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Tests | ❌ |" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Exit with error if any check failed
          if [ "${{ steps.typecheck.outputs.status }}" != "success" ] || \
             [ "${{ steps.format.outputs.status }}" != "success" ] || \
             [ "${{ steps.test.outputs.status }}" != "success" ]; then
            exit 1
          fi